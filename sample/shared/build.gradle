plugins {
    id("kotlin-multiplatform")
    id("com.android.library")
    id("kotlin-parcelize")
    id("kotlin-parcelize-darwin")
}

android {
    compileSdkVersion 30

    defaultConfig {
        targetSdkVersion 30
        minSdkVersion 28
    }
}

kotlin {
    android()

    ios {
        binaries {
            framework {
                baseName = "ParcelizeSample"
                export("com.arkivanov.parcelize.darwin:kotlin-parcelize-darwin-runtime:0.1.0")
            }
        }
    }

    sourceSets {
        iosMain {
            dependencies {
                api "com.arkivanov.parcelize.darwin:kotlin-parcelize-darwin-runtime:0.1.0"
            }
        }
    }
}


static String getIosTargetName() {
    def sdkName = System.getenv("SDK_NAME") ?: "iphonesimulator"
    return "ios" + (sdkName.startsWith("iphoneos") ? "Arm64" : "X64")
}

task packForXcode(type: Sync) {
    group = "build"
    def mode = System.getenv("CONFIGURATION")
    if (mode == null) {
        mode = "DEBUG"
    }
    def targetName = getIosTargetName()
    def framework = kotlin.targets.getByName(targetName).binaries.getFramework(mode)
    inputs.property("mode", mode)
    dependsOn(framework.linkTask)
    def targetDir = new File(buildDir, "xcode-frameworks")
    from(framework.outputDirectory)
    into(targetDir)
}
